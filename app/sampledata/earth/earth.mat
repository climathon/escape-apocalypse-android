material {
    name : "Textured material",
    parameters : [
        {
           type : sampler2d,
           name : baseColor
        },

        {
           type : float,
           name : fucked,
           precision: high
        }
    ],
    requires : [
        uv0
    ],
    shadingModel : unlit
}

fragment {
    void material(inout MaterialInputs material) {
        prepareMaterial(material);
        vec4 color = texture(materialParams_baseColor, getUV0());
        float fucked = materialParams.fucked;

        // translate green to brown
        if (color.x >= 0.7f && color.y >= 0.7f && color.z >= 0.7f) {
            // translate white to blue-ish
            color = fucked * vec4(0.18f, 0.26f, 0.4f, 1.f) + (1.f - fucked) * color;
        } else if(color.b >= 0.3f) {
            color -= color * 0.4f * fucked;
        } else if(color.g >= 0.3f) {
            color = fucked * vec4(0.5f, 0.4f, 0.1f, 1.f) + (1.f - fucked) * color;
        }
        color -= 0.6f * fucked * color;

        color += 0.03f * fucked * vec4(1.f, 0.f, 0.f, 0.f);
        material.baseColor = vec4(color.rgb, 1.0f);
    }
}
